plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}


ext {
	testcontainersVersion = '1.19.8'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
	testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// MyBatis Generator
	implementation 'org.mybatis.generator:mybatis-generator-core:1.4.2'
}

tasks.named('test') {
	useJUnitPlatform()
	
	testLogging {
		events = ["passed", "skipped", "failed"]
		exceptionFormat = "full"
		showStandardStreams = false
		showCauses = true
		showExceptions = true
		showStackTraces = false
	}
	
	afterSuite { desc, result ->
		if (!desc.parent) {
			def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
			def startItem = '|  ', endItem = '  |'
			def repeatLength = startItem.length() + output.length() + endItem.length()
			println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
		}
	}
}

// MyBatis Generator task
task mybatisGenerate(type: JavaExec) {
    description = 'Generate MyBatis model classes and mappers'
    group = 'mybatis'
    
    classpath = configurations.runtimeClasspath
    mainClass = 'org.mybatis.generator.api.ShellRunner'
    args = ['-configfile', 'src/main/resources/generatorConfig.xml', '-overwrite']
}
